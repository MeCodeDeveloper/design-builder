<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements. See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership. The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://test.internal"
            elementFormDefault="qualified">

  <xsd:simpleType name="ResponseType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This will be used for replying the service response.
        There will be many services that will return the service response as successful or
        failed. So this data type can be used over there.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Successful"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TimeType">
    <xsd:annotation>
      <xsd:documentation>Time only.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:time"/>
  </xsd:simpleType>
  <xsd:simpleType name="DateType">
    <xsd:annotation>
      <xsd:documentation>Date only.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <xsd:simpleType name="DateTimeType">
    <xsd:annotation>
      <xsd:documentation>Date and Time.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:dateTime"/>
  </xsd:simpleType>
  <xsd:simpleType name="DateTimeContext">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This type will determine whether a particular time or
        date is a UTC date/time or a Local date/time.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UTC"/>
      <xsd:enumeration value="Local"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DateISO8601Type">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format of (YYYY-MM-DD) or (MMYYMMDD). The validation
        will not check last days in month or leap years but prevents most garpage going in.
        If required to use a validated date, please consider using the gdt:DateType.
        Examples: 2001-12-25 or 20011225
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="8"/>
      <xsd:maxLength value="10"/>
      <xsd:pattern value="(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="CurrencyAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CurrencyCodeType">
    <xsd:annotation>
      <xsd:documentation>Use ISO 4217 three letter alpha code.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CurrencyNoOfDecimalType">
    <xsd:annotation>
      <xsd:documentation>Store the number of decimals for this currency</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:nonNegativeInteger"/>
  </xsd:simpleType>
  <xsd:simpleType name="TimeOfDayType">
    <xsd:annotation>
      <xsd:documentation>Type to handle time of day value. Format HHMM</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9]{4}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MoneyType">
    <xsd:simpleContent>
      <xsd:extension base="CurrencyAmountType">
        <xsd:attribute name="CurrencyCode" type="CurrencyCodeType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="ExchangeRateType">
    <xsd:annotation>
      <xsd:documentation>Type to Define Exchange Rate used to do the
        conversion
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LatitudeType">
    <xsd:restriction base="xsd:decimal">
      <xsd:minInclusive value="-90"/>
      <xsd:maxInclusive value="90"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LongitudeType">
    <xsd:restriction base="xsd:decimal">
      <xsd:minInclusive value="-180"/>
      <xsd:maxInclusive value="180"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TimeZoneNameType">
    <xsd:annotation>
      <xsd:documentation>Time zone can be either City/Country, Country Code or the GMT representation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Za-z/_]+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryCodeISO3166-1-Alpha-2Type">
    <xsd:annotation>
      <xsd:documentation>IS 3166-1 Alpha-2 compliant country code. Please note that this type
        will support all caps (AU) or all lower case (au). Refer to
        http://en.wikipedia.org/wiki/ISO_3166-1. Example: AU
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{2}|[a-z]{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryCodeISO3166-1-Alpha-3Type">
    <xsd:annotation>
      <xsd:documentation>IS 3166-1 Alpha-3 compliant country code. Refer to
        http://en.wikipedia.org/wiki/ISO_3166-1. Example: AUS
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryNameType">
    <xsd:annotation>
      <xsd:documentation>Text name of a country.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="EmailAddressType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Electronic email addresses, in IETF specified
        format.
      </xsd:documentation>
      <!-- FIXME this is not a valid IETF pattern restriction -->
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="IDType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to uniquely identify a data element within a
        schema. Please note that the IDType is a globally unique element identifier within
        the data model and the ID cannot be repeated at any level in the document. for most
        general use it is recommended to use IDKeyType. .
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:ID"/>
  </xsd:simpleType>
  <xsd:simpleType name="ReferenceIDType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to reference data elements by ID within the data
        set of a schema. The data integrity is guaranteed by adding the appropriate xsd:key
        and xsd:key-ref contraints to the schema.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:IDREF"/>
  </xsd:simpleType>
  <xsd:simpleType name="ExternalReferenceIDType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to reference data elements by ID that are part of
        a different data set outside the existing schema. Please note: the construction and
        data integrity is responsibility of the xml author.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NCName"/>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:annotation>
      <xsd:documentation>A sequence number that can be used to number consecutive occurences
        of elements in a list. This sequence is 1 based same as the positional element list
        index in XML.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:positiveInteger"/>
  </xsd:simpleType>
  <xsd:simpleType name="IDKeyType">
    <xsd:annotation>
      <xsd:documentation>The format is a sequence id from 1-100. Use this type in conjunction
        with xsd:key and xsd:key-ref to build relational dependencies. You may also want to
        consider IDType as a ID type that can guarantee global uniqueness of the
        field.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:positiveInteger"/>
  </xsd:simpleType>
  <xsd:simpleType name="IDPositionalKeyType">
    <xsd:annotation>
      <xsd:documentation>The sequence format is a concatencated id based on a major and minor
        format model [1-99].[1-99]. Example 1.10
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[1-9][0-9]?.[1-9][0-9]?"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IPAddressType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>
